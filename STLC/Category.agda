{-# OPTIONS --prop --postfix-projections --safe #-}
module STLC.Category where
open import Data.Sum using (_โ_; injโ; injโ)

open import STLC.Equivalence
open import STLC.STLC
open import STLC.Substitution

private variable
    ฮฑ ฮฒ ฮณ : Type
    ฮ ฮ ฮ : Context
    ฯ ฯ ฯโ ฯโ ฯโ : Substitution ฮ ฮ

Obj : Set
Obj = Context

Mor : Obj -> Obj -> Set
Mor ฮ ฮ = {ฮฑ : Type} -> Var ฮ ฮฑ -> Term ฮ ฮฑ

idMor : Mor ฮ ฮ
idMor = var

compMor : Mor ฮ ฮ -> Mor ฮ ฮ -> Mor ฮ ฮ
compMor ฯ ฯ = sub ฯ โ ฯ

-- To prevent Agda inserting implicit arguments.
-- Also to avoid function extensionality.
_==_ : Mor ฮ ฮ -> Mor ฮ ฮ -> Prop
ฯ == ฯ = โ {ฮฑ} {v : Var _ ฮฑ} -> ฯ v โ ฯ v
infix 3 _==_

idโ : compMor idMor ฯ == ฯ
idโ = refl

idแตฃ : compMor ฯ idMor == ฯ
idแตฃ {ฯ = ฯ} {v = v} rewrite sub-var (ฯ v) = refl

assoc : compMor (compMor ฯโ ฯโ) ฯโ == compMor ฯโ (compMor ฯโ ฯโ)
assoc {ฯโ = ฯโ} {ฯโ = ฯโ} {ฯโ = ฯโ} {v = v}
    rewrite sub-sub ฯโ ฯโ (ฯโ v) = refl

_ร_ : Obj -> Obj -> Obj
ฮ ร โ = ฮ
ฮ ร (ฮ โ ฮฑ) = (ฮ โ ฮฑ) ร ฮ
infixl 20 _ร_

private
    pโ : Renaming ฮ (ฮ ร ฮ)
    pโ {ฮ = โ} v = v
    pโ {ฮ = ฮ โ _} v = pโ {ฮ = ฮ} (๐ค v)

    pโ : Renaming ฮ (ฮ ร ฮ)
    pโ {ฮ = ฮ โ _} ๐ซ = pโ {ฮ = ฮ} ๐ซ
    pโ {ฮ = ฮ โ _} (๐ค v) = pโ v

    split : Var (ฮ ร ฮ) ฮฑ -> Var ฮ ฮฑ โ Var ฮ ฮฑ
    split {ฮ = โ} v = injโ v
    split {ฮ = ฮ โ _} v with split {ฮ = ฮ} v
    ... | injโ ๐ซ = injโ ๐ซ
    ... | injโ (๐ค v) = injโ v
    ... | injโ v = injโ (๐ค v)

ฯโ : Mor (ฮ ร ฮ) ฮ
ฯโ {ฮ = ฮ} x = var (pโ {ฮ = ฮ} x)

ฯโ : Mor (ฮ ร ฮ) ฮ
ฯโ v = var (pโ v)

โจ_ร_โฉ : Mor ฮ ฮ -> Mor ฮ ฮ -> Mor ฮ (ฮ ร ฮ)
โจ_ร_โฉ {ฮ = ฮ} ฯ ฯ v with split {ฮ = ฮ} v
... | injโ v = ฯ v
... | injโ v = ฯ v

๐ : Obj
๐ = โ

Telescope : Context -> Type -> Type
Telescope โ ฮฑ = ฮฑ
Telescope (ฮ โ ฮฒ) ฮฑ = ฮฒ โ Telescope ฮ ฮฑ

private
    abs : Term (ฮ ร ฮ) ฮฑ -> Term ฮ (Telescope ฮ ฮฑ)
    abs {ฮ = โ} t = t
    abs {ฮ = ฮ โ _} t = ^ abs t

    app : Term ฮ (Telescope ฮ ฮฑ) -> Term (ฮ ร ฮ) ฮฑ
    app {ฮ = โ} t = t
    app {ฮ = ฮ โ _} t = app {ฮ = ฮ} (ren ๐ค_ t โ var ๐ซ)

Hom : Obj -> Obj -> Obj
Hom ฮ โ = โ
Hom ฮ (ฮ โ ฮฑ) = Hom ฮ ฮ โ Telescope ฮ ฮฑ

uncurry : Mor ฮ (Hom ฮ ฮ) -> Mor (ฮ ร ฮ) ฮ
uncurry ฯ ๐ซ = app (ฯ ๐ซ)
uncurry ฯ (๐ค v) = uncurry (ฯ โ ๐ค_) v

curry : Mor (ฮ ร ฮ) ฮ -> Mor ฮ (Hom ฮ ฮ)
curry {ฮ = ฮ โ _} ฯ ๐ซ = abs (ฯ ๐ซ)
curry {ฮ = ฮ โ _} ฯ (๐ค v) = curry (ฯ โ ๐ค_) v
